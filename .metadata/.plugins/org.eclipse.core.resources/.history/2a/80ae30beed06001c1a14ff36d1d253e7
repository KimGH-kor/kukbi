package ch07;

public class RationalNumber {
	int molecular,denominator;
	int gcd = 0;
	
	//생성자
	public RationalNumber() {
		this(1,1);
	}
	public RationalNumber(int denominator) {
		this(1,denominator);
	}
	public RationalNumber(int molecular, int denominator){
		this.denominator = denominator;
		this.molecular = molecular;
		int gcd = GCD(molecular, denominator);
		this.molecular /=gcd;
		this.denominator /=gcd;
	}
	
	//최대 공약수로 기약분수 
	public int GCD(int a, int b) {
		int gcd = 0;
		if(a < b) {
			while(b!=0) {
				int t = a%b;
				a = b;
				b = t;
			}
			gcd = a;
		}else {
			while(a!=0) {
				int t = b%a;
				b = a;
				a = t;
			}
			gcd = b;
		}
		return gcd;
	}
	
	public static RationalNumber 더하기(RationalNumber a, RationalNumber b){
		int i = a.denominator;
		a.denominator *= b.denominator;
		a.molecular *= b.denominator;
		b.denominator *= i;
		b.molecular *= i;
		RationalNumber 유리 = new RationalNumber((a.molecular+b.molecular),a.denominator);
		유리.GCD(유리.molecular,유리.denominator);
		
		return 유리;
	}
	public static RationalNumber 빼기(RationalNumber a, RationalNumber b){
		int i = a.denominator;
		a.denominator *= b.denominator;
		a.molecular *= b.denominator;
		b.denominator *= i;
		b.molecular *= i;
		RationalNumber 유리 = new RationalNumber((a.molecular>b.molecular?a.molecular-b.molecular:b.molecular-a.molecular),a.denominator);
		유리.GCD(유리.molecular,유리.denominator);
		
		return 유리;
	}
	public static RationalNumber 곱하기(RationalNumber a, RationalNumber b){
		a.denominator *= b.denominator;
		a.molecular *= b.molecular;
		RationalNumber 유리 = new RationalNumber(a.molecular,a.denominator);
		유리.GCD(유리.molecular,유리.denominator);
		
		return 유리;
	}
	public static RationalNumber 나누기(RationalNumber a, RationalNumber b){
		a.denominator *= b.molecular;
		a.molecular *= b.denominator;
		RationalNumber 유리 = new RationalNumber(a.molecular,a.denominator);
		유리.GCD(유리.molecular,유리.denominator);
		
		return 유리;
	}
	
	//출력
	public void showInfo() {
		if(this.denominator >1) {
			System.out.println(molecular+"/"+denominator);
		}else {
			System.out.println(molecular);
		}
	}
	
	public static void main(String[] args) {
		RationalNumber 유0 = new RationalNumber(2,3);
		RationalNumber 유1 = new RationalNumber(4,3);
		
		유0.showInfo();
		유1.showInfo();
		
		RationalNumber 유3 = RationalNumber.더하기(유0, 유1);
		유3.showInfo();
		RationalNumber 유4 = RationalNumber.빼기(유0, 유1);
		유4.showInfo();
		RationalNumber 유5 = RationalNumber.곱하기(유0, 유1);
		유5.showInfo();
		RationalNumber 유6 = RationalNumber.나누기(유0, 유1);
		유6.showInfo();




		
	}
}

